generate source from bytecode sequence
write evaluator and support functions
refactor into single file header
    evaluator only
    compiler only
    combined


literal (match and go)
    char (c)
    string (idx)
    class (idx)
    anychar

    in place

concatenation
    no op

alternation (l2 - 2nd instr, l3 - next)
    split (l1) (l2)
    l1: ...
    jmp (l3)
    l2: ...
    l3:

    defer:
        op a
        op b
        end

zeroorone (l2 - next)
    split (l1) (l2)
    l1: ...
    l2:

    no defer

zeroormany (l3 - next)
    l1: split (l2) (l3)
    l2: ...
    jmp (l1)
    l3:

    no defer

oneormany
    l1: ...
    split (l1) (l2)
    l2:

    no defer

group
    save (idx)

    no defer

match
    match


start pc, next pc


literal
zeroorone,zeroormany,oneormany -> literal


#define MOJO_REGEX_COMPILE_IMPLEMENTATION
#define MOJO_REGEX_EVALUATE_IMPLEMENTATION

#include "regex.h"

regexCompile
regexMatch
    complete
    fulfillment
regexVMGenerateDeclaration
regexVMGenerateDefinition
regexGroupCountGet
regexGroupNameLookup
regexGroupIndexLookup
regexGroupValueGet


non complete matches should return the range the matched on
group numbering begins at 1
group "0" is the entire matched expression (not neccessarily the same as the
    input text, depending on the value of "complete")
    

